{"version":3,"sources":["Components/MessageForm.jsx","Components/MyMessage.jsx","Components/TheirMessage.jsx","Components/ChatFeed.jsx","Components/LoginForm.jsx","App.js","index.js"],"names":["MessageForm","props","useState","value","setValue","chatId","creds","handleSubmit","event","preventDefault","text","trim","length","sendMessage","className","onSubmit","placeholder","onChange","target","isTyping","htmlFor","PictureOutlined","type","multiple","id","style","display","files","bind","SendOutlined","MyMessage","message","attachments","src","file","alt","float","marginRight","color","backgroundColor","TheirMessage","lastMessage","isFirstMessageByUser","sender","username","backgroundImage","avatar","marginLeft","ChatFeed","chats","activeChat","userName","messages","chat","renderReadReceipts","isMyMessage","people","map","person","index","last_read","title","keys","Object","key","lastMessageKey","width","renderMessages","height","Modal","setUsername","password","setPassword","error","setError","e","a","authObject","axios","get","headers","localStorage","setItem","window","location","reload","required","align","App","getItem","projectID","userSecret","renderChatFeed","chatAppProps","onNewMessage","Audio","play","LoginForm","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8c85110a.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport { SendOutlined, PictureOutlined } from '@ant-design/icons';\r\nimport { sendMessage, isTyping } from 'react-chat-engine';\r\n\r\nconst MessageForm = (props) => {\r\n  const [value, setValue] = useState('');\r\n  const { chatId, creds } = props;\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n\r\n    isTyping(props, chatId);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const text = value.trim();\r\n\r\n    if (text.length > 0) {\r\n      sendMessage(creds, chatId, { text });\r\n    }\r\n\r\n    setValue('');\r\n  };\r\n\r\n  const handleUpload = (event) => {\r\n    sendMessage(creds, chatId, { files: event.target.files, text: '' });\r\n  };\r\n\r\n  return (\r\n    <form className=\"message-form\" onSubmit={handleSubmit}>\r\n      <input\r\n        className=\"message-input\"\r\n        placeholder=\"Send a message...\"\r\n        value={value}\r\n        onChange={handleChange}\r\n        onSubmit={handleSubmit}\r\n      />\r\n      <label htmlFor=\"upload-button\">\r\n        <span className=\"image-button\">\r\n          <PictureOutlined className=\"picture-icon\" />\r\n        </span>\r\n      </label>\r\n      <input\r\n        type=\"file\"\r\n        multiple={false}\r\n        id=\"upload-button\"\r\n        style={{ display: 'none' }}\r\n        onChange={handleUpload.bind(this)}\r\n      />\r\n      <button type=\"submit\" className=\"send-button\">\r\n        <SendOutlined className=\"send-icon\" />\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default MessageForm;\r\n","const MyMessage = ({message}) => {\r\n    if(message?.attachments?.length > 0){\r\n        return(\r\n            <img src={message.attachments[0].file}\r\n            alt=\"message-attachment\"\r\n            className=\"message-image\"\r\n            style={{float:'right'}}\r\n            />\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"message\" style={{ float: 'right', marginRight: '18px', color: 'white', backgroundColor: '#3B2A50' }}>\r\n          {message.text}\r\n        </div>\r\n      );\r\n    };\r\n    \r\nexport default MyMessage;\r\n","const TheirMessage = ({ lastMessage, message }) => {\r\n    const isFirstMessageByUser = !lastMessage || lastMessage.sender.username !== message.sender.username;\r\n  \r\n    return (\r\n      <div className=\"message-row\">\r\n        {isFirstMessageByUser && (\r\n          <div\r\n            className=\"message-avatar\"\r\n            style={{ backgroundImage: message.sender && `url(${message.sender.avatar})` }}\r\n          />\r\n        )}\r\n        {message.attachments && message.attachments.length > 0\r\n          ? (\r\n            <img\r\n              src={message.attachments[0].file}\r\n              alt=\"message-attachment\"\r\n              className=\"message-image\"\r\n              style={{ marginLeft: isFirstMessageByUser ? '4px' : '48px' }}\r\n            />\r\n          )\r\n          : (\r\n            <div className=\"message\" style={{ float: 'left', backgroundColor: '#CABCDC', marginLeft: isFirstMessageByUser ? '4px' : '48px' }}>\r\n              {message.text}\r\n            </div>\r\n          )}\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default TheirMessage;","import MessageForm from \"./MessageForm\"\r\nimport MyMessage from \"./MyMessage\"\r\nimport TheirMessage from \"./TheirMessage\"\r\n\r\n\r\nconst ChatFeed =(props) => {\r\n    const { chats,activeChat,userName,messages} =props;\r\n    const chat = chats && chats[activeChat];\r\n    const renderReadReceipts = (message, isMyMessage) => chat.people.map((person, index) => person.last_read === message.id && (\r\n      <div\r\n        key={`read_${index}`}\r\n        className=\"read-receipt\"\r\n        style={{\r\n          float: isMyMessage ? 'right' : 'left',\r\n          backgroundImage: person.person.avatar && `url(${person.person.avatar})`,\r\n        }}\r\n      />\r\n    ));\r\n    const renderMessages = () => {\r\n        const keys =Object.keys(messages);\r\n        return keys.map((key,index) => {\r\n            const message =messages[key];\r\n            const lastMessageKey = index === 0 ? null :keys[index - 1];\r\n            const isMyMessage = userName === message.sender.username;\r\n            return(\r\n                <div keys={`msg_${index}`} style={{width: '100%'}}>\r\n                    <div className=\"message-block\">\r\n                        {\r\n                            isMyMessage\r\n                            ? <MyMessage message={message} />\r\n                            : <TheirMessage message={message} lastMessage={messages[lastMessageKey]} />\r\n                        }\r\n                    </div>\r\n                    <div className=\"read-receipts\" style={{ marginRight: isMyMessage ? '18px' : '0px', marginLeft: isMyMessage ? '0px' : '68px' }}>\r\n                    {renderReadReceipts(message, isMyMessage)}\r\n                    </div>\r\n                </div>\r\n            );\r\n        })\r\n    }\r\n    \r\n    if (!chat) return <div />;\r\n    return (\r\n        <div className=\"chat-feed\">\r\n          <div className=\"chat-title-container\">\r\n            <div className=\"chat-title\">{chat?.title}</div>\r\n            <div className=\"chat-subtitle\">\r\n              {chat.people.map((person) => ` ${person.person.username}`)}\r\n            </div>\r\n          </div>\r\n          {renderMessages()}\r\n          <div style={{ height: '100px' }} />\r\n          <div className=\"message-form-container\">\r\n            <MessageForm {...props} chatId={activeChat} />\r\n          </div>\r\n        </div>\r\n      );\r\n    \r\n};\r\nexport default ChatFeed;","import { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst projectID = '7526f6bd-dbdd-4798-b782-5913bd5c6e4f';\r\n\r\nconst Modal = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const authObject = { 'Project-ID': projectID, 'User-Name': username, 'User-Secret': password };\r\n\r\n    try {\r\n      await axios.get('https://api.chatengine.io/chats', { headers: authObject });\r\n\r\n      localStorage.setItem('username', username);\r\n      localStorage.setItem('password', password);\r\n\r\n      window.location.reload();\r\n      setError('');\r\n    } catch (err) {\r\n      setError('Oops, incorrect credentials.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"form\">\r\n        <h1 className=\"title\">Chat Application</h1>\r\n        <form onSubmit={handleSubmit}>\r\n          <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} className=\"input\" placeholder=\"Username\" required />\r\n          <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} className=\"input\" placeholder=\"Password\" required />\r\n          <div align=\"center\">\r\n            <button type=\"submit\" className=\"button\">\r\n              <span>Start chatting</span>\r\n            </button>\r\n          </div>\r\n        </form>\r\n        <h1>{error}</h1>\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default Modal;","import { ChatEngine } from 'react-chat-engine';\nimport ChatFeed from './Components/ChatFeed';\nimport LoginForm from \"./Components/LoginForm\";\nimport './App.css'\nconst App = () => {\n  if (!localStorage.getItem('username')) return <LoginForm />;\n  return (\n    <ChatEngine height=\"100vh\"\n                projectID=\"7526f6bd-dbdd-4798-b782-5913bd5c6e4f\"\n                userName={localStorage.getItem('username')}\n                userSecret={localStorage.getItem('password')}\n                renderChatFeed={(chatAppProps) => <ChatFeed {...chatAppProps} />}\n      onNewMessage={() => new Audio('https://chat-engine-assets.s3.amazonaws.com/click.mp3').play()}\n                /> \n  )\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}